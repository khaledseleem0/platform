import React, { useState,useEffect } from "react";
import {
  SelectOne,
  ChatHeader,
  Send,
  ChatBody,
  ChatFooter,
  Input,
  RightOp,
  ChatContainer,
  ChatRoom,
  ImgContainer,
  Open
} from "./chatStyle";
import { Name, Ancor } from "./../left/leftStyle";
import Message from "./message";
import {Api ,width,maximam } from  "./../getter";
function Chat(props) {
// who in chat 
const [person, SetPerson] = useState({
  "image": "./images/svg/def.svg",
  "name": "unknown",
  "status": "",
  "id": -1,
});
  const[api,SetApi] = useState([])
  //get api 
  useEffect(() => {
    try{
      Api().then((respond) => {
        let data = respond.messages;
        let final_result =  data;
        SetApi(final_result);
      })
    }catch(err){
      console.log(err);
    }
 

}, []) 
useEffect(()=>{
  let best_data = api.find((result)=> {return result.name == props.match.params.chat})
  if(best_data != undefined){
    SetPerson(best_data)
  }

})
// end
  const [message, SetMessage] = useState({
    who: null,
    messageVal: null
  });
  const [renderedM, SetRenderedM] = useState([]);
  const handelChange = e => {
    SetMessage({
      who: e.target.value,
      messageVal: message.messageVal
    });
  };
  const handelValue = e => {
    SetMessage({
      messageVal: e.target.value,
      who: message.who
    });
  };
  const handelRender = (e) => {
       let send = document.querySelector(".send");
        if(message.who === null || message.messageVal === null || message.messageVal.trim() === ''){
               send.classList.add("disabledpost");
                return;
        }else{
          send.classList.remove("disabledpost");
            SetRenderedM([
                ...renderedM,message
            ]);
            document.querySelector("input[type=text]").value ="";
            SetMessage({
              who:message.who,
              messageVal:""
            });
        }
  };
  const handelOpen = ()=>{
      let open = document.querySelector(".select");
      open.classList.toggle("open")
  }
  return (
    <>
      <ChatContainer>
        <ChatRoom>
          <ChatHeader>
            <div>
              <ImgContainer>
              {person.id === -1 ? <svg height="40" viewBox="-29 0 512 512.00066" width="512pt" xmlns="http://www.w3.org/2000/svg"><path d="m437.898438 512h-420.214844c-11.523438 0-19.957032-10.847656-17.136719-22.015625l19.507813-76.984375c5.890624-23.265625 22.867187-42.136719 45.378906-50.453125l102.796875-37.96875c2.75-1.015625 5.816406-.742187 8.34375.742187l51.21875 30.0625 50.722656-30.199218c2.542969-1.515625 5.628906-1.796875 8.402344-.773438l103.230469 38.136719c22.511718 8.316406 39.488281 27.1875 45.378906 50.453125l19.507812 76.984375c2.824219 11.167969-5.609375 22.015625-17.136718 22.015625zm0 0" fill="#868491"/><path d="m169.164062 355.382812 29.105469-17.328124-21.695312-12.734376c-2.527344-1.484374-5.59375-1.757812-8.34375-.742187l-31.636719 11.683594zm0 0" fill="#787784"/><path d="m455.039062 489.984375-19.507812-76.984375c-5.894531-23.265625-22.867188-42.136719-45.382812-50.453125l-103.230469-38.136719c-2.773438-1.023437-5.859375-.742187-8.398438.769532l-18.433593 10.976562 71.4375 26.390625c22.511718 8.316406 39.488281 27.1875 45.378906 50.453125l19.507812 76.984375c2.824219 11.167969-5.609375 22.015625-17.136718 22.015625h58.628906c11.523437 0 19.957031-10.847656 17.136718-22.015625zm0 0" fill="#787784"/><g fill="#4f495b"><path d="m168.226562 324.578125-34.324218 12.675781 47.574218 47.316406c3.425782 3.40625 8.90625 3.582032 12.542969.394532l33.773438-29.585938-51.222657-30.0625c-2.527343-1.484375-5.59375-1.757812-8.34375-.738281zm0 0"/><path d="m286.914062 324.410156 34.769532 12.84375-49.050782 47.371094c-3.488281 3.371094-8.996093 3.449219-12.582031.179688l-32.257812-29.425782 50.722656-30.195312c2.539063-1.511719 5.625-1.796875 8.398437-.773438zm0 0"/><path d="m227.792969 488.785156c-4.460938 0-8.078125-3.617187-8.078125-8.082031v-86.132813c0-4.460937 3.617187-8.078124 8.078125-8.078124 4.460937 0 8.078125 3.617187 8.078125 8.078124v86.132813c0 4.464844-3.617188 8.082031-8.078125 8.082031zm0 0"/></g><path d="m227.941406 307.429688c-21.4375.410156-38.984375-17.546876-38.984375-38.984376v-47.824218c0-26.5625 19.125-48.855469 45.476563-53.007813 22.542968-3.550781 39.136718-23.503906 38.597656-46.414062-.566406-24.085938-20.621094-44.140625-44.707031-44.710938-12.496094-.28125-24.257813 4.335938-33.160157 13.035157-8.910156 8.703124-13.820312 20.351562-13.820312 32.800781 0 21.058593-17.019531 38.140625-38.054688 38.238281-21.550781.101562-38.664062-18.179688-38.410156-39.730469.382813-32.65625 13.433594-63.152343 36.847656-86.019531 23.761719-23.210938 55.171876-35.535156 88.398438-34.78125 31.445312.742188 61.097656 13.480469 83.488281 35.875 22.394531 22.394531 35.136719 52.042969 35.875 83.492188.703125 29.898437-9.503906 58.933593-28.746093 81.75-13.511719 16.027343-30.789063 28.203124-50.078126 35.539062-3.128906 1.191406-5.230468 4.148438-5.230468 7.496094v25.015625c0 20.871093-16.71875 37.835937-37.492188 38.230469zm0 0" fill="#ffd782"/><path d="m181.34375 122.324219c0-12.449219 4.910156-24.097657 13.820312-32.800781 7.492188-7.320313 17.015626-11.738282 27.289063-12.789063-7.441406-5.683594-16.605469-9.167969-26.445313-9.402344-12.492187-.28125-24.253906 4.335938-33.160156 13.035157-8.910156 8.703124-13.816406 20.351562-13.816406 32.800781 0 18.691406-13.414062 34.238281-31.136719 37.570312 6.746094 6.117188 15.609375 9.871094 25.394531 9.824219 21.035157-.097656 38.054688-17.179688 38.054688-38.238281zm0 0" fill="#ffc36f"/><path d="m349.488281 119.398438c-.742187-31.445313-13.480469-61.097657-35.875-83.492188-19.070312-19.070312-43.40625-31.132812-69.628906-34.75 13.742187 6.054688 26.394531 14.671875 37.316406 25.59375 22.390625 22.394531 35.132813 52.046875 35.871094 83.492188.707031 29.902343-9.503906 58.933593-28.746094 81.753906-9.519531 11.292968-20.910156 20.671875-33.558593 27.796875-13.4375 7.566406-21.746094 21.792969-21.746094 37.214843v3.035157c0 18.695312-13.417969 34.246093-31.148438 37.570312 6.910156 6.234375 16.019532 10.007813 25.96875 9.816407 20.773438-.398438 37.492188-17.363282 37.492188-38.230469v-25.011719c0-3.351562 2.101562-6.308594 5.230468-7.5 19.289063-7.335938 36.5625-19.511719 50.078126-35.535156 19.242187-22.820313 29.449218-51.855469 28.746093-81.753906zm0 0" fill="#ffc36f"/></svg> : <img alt="img not foud" src={ person.image} />}
              </ImgContainer>

              <Name>{person.name}</Name>
            </div>
            <RightOp>
              <span>
                <Ancor to={width > maximam ? "/platform" : "platform/messages"}>
                back
                </Ancor>
                </span>
            </RightOp>
          </ChatHeader>

          <ChatBody>
            {
                renderedM.map((content,i)=>{
                        return <Message content={content} key={i}/>
                })
            }
            <SelectOne className="select">
              <div>
                <input
                  type="radio"
                  name="how"
                  id="user"
                  value="user"
                  onChange={e => handelChange(e)}
                />
                <label htmlFor="user"> me </label>
              </div>
              <div>
                <input
                  type="radio"
                  name="how"
                  id="other"
                  value="other"
                  onChange={e => handelChange(e)}
                />
                <label htmlFor="user"> {person.name}</label>
              </div>
              <Open onClick={()=>handelOpen()}>
              <svg class="svg-icon" viewBox="0 0 20 20">
							<path d="M11.739,13.962c-0.087,0.086-0.199,0.131-0.312,0.131c-0.112,0-0.226-0.045-0.312-0.131l-3.738-3.736c-0.173-0.173-0.173-0.454,0-0.626l3.559-3.562c0.173-0.175,0.454-0.173,0.626,0c0.173,0.172,0.173,0.451,0,0.624l-3.248,3.25l3.425,3.426C11.911,13.511,11.911,13.789,11.739,13.962 M18.406,10c0,4.644-3.763,8.406-8.406,8.406S1.594,14.644,1.594,10S5.356,1.594,10,1.594S18.406,5.356,18.406,10 M17.521,10c0-4.148-3.373-7.521-7.521-7.521c-4.148,0-7.521,3.374-7.521,7.521c0,4.148,3.374,7.521,7.521,7.521C14.147,17.521,17.521,14.148,17.521,10"></path>
					  	</svg>
              </Open>
            </SelectOne>
          </ChatBody>
          <ChatFooter>
            <Input type="text" onInput={(e) => handelValue(e)} />
            <Send className="send" onClick={()=>handelRender()} className="send"> 
            <svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px"
              width="24" height="24"
              viewBox="0 0 48 48"
               style={{fill:"#000000;"}}><path fill="#50e6ff" d="M41.621,5.058l-35.9,12.281c-0.747,0.255-0.967,1.205-0.409,1.763l23.585,23.585	c0.558,0.558,1.508,0.338,1.763-0.409l12.281-35.9C43.222,5.561,42.439,4.778,41.621,5.058z"></path><path fill="#35c1f1" d="M17.105,30.895l11.792,11.792c0.558,0.558,1.508,0.338,1.763-0.409l12.281-35.9	c0.141-0.408,0.015-0.808-0.248-1.071L17.105,30.895z"></path><path fill="#199be2" d="M38,10L13,26.789V34c0,0.552,0.448,1,1,1h7.211L38,10z"></path></svg>
        
            </Send>
          </ChatFooter>
        </ChatRoom>
      </ChatContainer>
    </>
  );
}       
export default Chat;
